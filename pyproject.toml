
[build-system]
# setuptools-scm considers all files tracked by git to be data files
requires = ["setuptools>=62.0", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "prepline_general"
description = "UnstructuredIO API"
readme = "README.md"
requires-python = "~=3.10"
# keywords = ["one", "two"]
license = { text = "Proprietary" }
classifiers = [ # https://pypi.org/classifiers/
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3 :: Only",
    "Intended Audience :: Information Technology",
    "Operating System :: Unix",
]
version="0.0.68"

[tool.black]
line-length = 100

[tool.pyright]
pythonPlatform = "Linux"
pythonVersion = "3.9"
reportUnnecessaryCast = true
typeCheckingMode = "strict"

[tool.ruff]
line-length = 100
select = [
    "C4",       # -- flake8-comprehensions --
    "COM",      # -- flake8-commas --
    "E",        # -- pycodestyle errors --
    "F",        # -- pyflakes --
    "I",        # -- isort (imports) --
    "PLR0402",  # -- Name compared with itself like `foo == foo` --
    "PT",       # -- flake8-pytest-style --
    "SIM",      # -- flake8-simplify --
    "UP015",    # -- redundant `open()` mode parameter (like "r" is default) --
    "UP018",    # -- Unnecessary {literal_type} call like `str("abc")`. (rewrite as a literal) --
    "UP032",    # -- Use f-string instead of `.format()` call --
    "UP034",    # -- Avoid extraneous parentheses --
]
ignore = [
    "COM812",   # -- over aggressively insists on trailing commas where not desireable --
    "PT011",    # -- pytest.raises({exc}) too broad, use match param or more specific exception --
    "PT012",    # -- pytest.raises() block should contain a single simple statement --
    "SIM117",   # -- merge `with` statements for context managers that have same scope --
]

[tool.ruff.lint.isort]
known-first-party = [
    "unstructured",
    "unstructured_inference",
]

[tool.setuptools.packages.find]
where = ["."]